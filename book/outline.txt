1. Introduction - The Quest for Networks that Learn
    * History: 
        * DARPA IDS challenge, spam filters, …
        * From signatures to statistical classification/detection
        * Offline detection algorithms: traffic classification, botnet detection, …
        * Breakthroughs: Programmable telemetry, ML libraries, automated ML
    * Why ML for networking?
        * History: Systems could be modeled in closed form.
        * Mid-2000s: Closed-form modeling of complex systems (for security, prediction, etc.)
    * What you will learn …
2. Network Traffic Measurement
    * Active measurement
        * ping, traceroute, …
        * application-level probes and meausrement
    * Passive measurement
        * conventional: pcap, NetFlow, …
        * emerging: P4, NetFPGA-based, PF_RING, etc. …
    * Basic analysis
        * from traffic to wireshark
        * from packets to pandas/dataframes
3. Supervised Learning
    * Linear Regression (example: packets/bytes)
    * Logistic Regression (example: DNS query/response)
    * Support Vector Machines
    * Tree-Based Models (decision trees)
    * Kernel Methods
    * Ensemble Learning
        * Bagging/Bootstrapping (random forest) (example: spam filtering)
        * Boosting
4. Unsupervised Learning
    * Goals: 
        * Anomaly Detection
        * Dimensionality Reduction
    * Principal Components Analysis (application: outlier detection on network traffic)
    * NetML outlier detection python framework (https://pypi.org/project/netml/)
5. Machine Learning Pipelines for Networking
    * Data Representation (https://nprint.github.io/nprint/)
    * Automated ML Pipelines (e.g., AutoGluon, AutoML, …)
    * Programmable Telemetry

